<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="product">

	<resultMap type="shop.zeedeco.util.CamelCaseMap" id="camelCaseMap"></resultMap>

	<!-- product -->
	<sql id="getSql">
		SELECT 
			product_seq
			, member_fk
			, category
			, title
			, content
			, thumbnail
			, remark
			, use_yn
			, del_yn
			, created_dt
			, created_no
			, updated_dt
			, updated_no
		FROM product
		WHERE 1=1
	</sql>
	
	<sql id="getWhere">
		<if test="productSeq != null and !productSeq.equals('')">
			AND product_seq= #{productSeq}
		</if>
		<if test="memberSeq != null and !memberSeq.equals('')">
			AND member_fk= #{memberSeq}
		</if>
		<if test="category != null and !category.equals('')">
			AND category= #{category}
		</if>
		<if test="category != null and !title.equals('')">
			AND title like CONCAT('%', #{title}, '%')
		</if>
		<if test="content != null and !content.equals('')">
			AND content like CONCAT('%', #{content}, '%')
		</if>
		<if test="useYn != null and !useYn.equals('')">
			AND use_yn= #{useYn}
		</if>
		<if test="delYn != null and !delYn.equals('')">
			AND del_yn= #{delYn}
		</if>
	</sql>
	
	<select id="getProducts" resultMap="camelCaseMap">
		/** product.getProducts **/
		<include refid="getSql"/>
		<include refid="getWhere"/>		
		ORDER BY product_seq desc
  		<if test="startRow != null and !startRow.equals('')">
  			limit #{startRow}, #{size}
  		</if>
	</select>
	
	<select id="getProductsCnt" resultMap="camelCaseMap">
		/** product.getProductsCnt **/
		select count(*) as cnt from (
			<include refid="getSql"/>
			<include refid="getWhere"/>			
    	) tb
	</select>
	
	<insert id="addProduct">
		/** product.addProduct **/
		INSERT INTO product (
			member_fk
			, category
			, title
			, content
			, thumbnail
			, remark
			, use_yn
			, del_yn
			, created_dt
			, created_no
		) VALUES (
			#{memberSeq}
			, #{category}
			, #{title}
			, #{content}
			, #{thumbnail}
			, #{remark}
			, #{useYn}
			, #{delYn}
			, NOW()
			, #{memberSeq}
		)
		
		<selectKey keyProperty="productSeq" resultType="Integer" order="AFTER">
  			 SELECT LAST_INSERT_ID()
  		</selectKey>
	</insert>
	
	<update id="setProduct">
		/** product.setProduct **/
		UPDATE product
		<set>
			<if test="category != null and !category.equals('')"> category= #{category},</if>
			<if test="thumbnail != null and !thumbnail.equals('')"> thumbnail= #{thumbnail},</if>
			<if test="title != null and !title.equals('')"> title= #{title},</if>
			<if test="content != null and !content.equals('')"> content= #{content},</if>
			<if test="remark != null and !remark.equals('')"> remark= #{remark},</if>
			<if test="useYn != null and !useYn.equals('')"> use_yn= #{useYn},</if>
			<if test="delYn != null and !delYn.equals('')"> del_yn= #{delYn},</if>	
			updated_dt= NOW(),
			updated_no= #{memberSeq}	
		</set>
		WHERE product_seq= #{productSeq}
	</update>
	
	<delete id="removeProduct">
		/** product.removeProduct **/
		DELETE FROM product
		WHERE product_seq= #{productSeq}
	</delete>
	
	<!-- product-detail -->
	<sql id="getDetailSql">
		SELECT 
			detail_seq
			, product_fk
			, start_dt
			, end_dt
			, price
			, discount_price
			, discount_rate
			, discount_yn
			, use_yn
			, del_yn
			, created_dt
			, created_no
			, updated_dt
			, updated_no
		FROM product_detail
		WHERE 1=1
	</sql>
	
	<sql id="getDetailWhere">
		<if test="productSeq != null and !productSeq.equals('')">
			AND product_fk= #{productSeq}
		</if>
		<if test="useYn != null and !useYn.equals('')">
			AND use_yn= #{useYn}
		</if>
		<if test="delYn != null and !delYn.equals('')">
			AND del_yn= #{delYn}
		</if>
	</sql>
	
	<select id="getProductDetails" resultMap="camelCaseMap">
		/** product.getProductDetails **/
		<include refid="getDetailSql"/>
		<include refid="getDetailWhere"/>	
  		<if test="startRow != null and !startRow.equals('')">
  			limit #{startRow}, #{size}
  		</if>
	</select>
	
	<insert id="addProductDetail">
		/** product.addProductDetail **/
		INSERT INTO product_detail (
			product_fk
			, start_dt
			, end_dt
			, price
			, discount_price
			, discount_rate
			, discount_yn
			, use_yn
			, del_yn
			, created_dt
			, created_no
		) VALUES (
			#{productSeq}
			, #{startDt}
			, #{endDt}
			, #{price}
			, #{discountPrice}
			, #{discountRate}
			, #{discountYn}
			, #{useYn}
			, #{delYn}
			, NOW()
			, #{memberSeq}
		)
	</insert>
	
	<update id="setProductDetail">
		/** product.setProductDetail **/
		UPDATE product_detail
		<set>
			<if test="startDt != null and !startDt.equals('')"> start_dt= #{startDt},</if>
			<if test="endDt != null and !endDt.equals('')"> end_dt= #{endDt},</if>
			<if test="price != null and !price.equals('')"> price= #{price},</if>
			<if test="discountPrice != null and !discountPrice.equals('')"> discount_price= #{discountPrice},</if>
			<if test="discountRate != null and !discountRate.equals('')"> discount_rate= #{discountRate},</if>
			<if test="discountYn != null and !discountYn.equals('')"> discount_yn= #{discountYn},</if>
			<if test="useYn != null and !useYn.equals('')"> use_yn= #{useYn},</if>
			<if test="delYn != null and !delYn.equals('')"> del_yn= #{delYn},</if>	
			updated_dt= NOW(),
			updated_no= #{memberSeq}	
		</set>
		WHERE detail_seq= #{productDetailSeq}
	</update>
	
	<delete id="removeProductDetail">
		/** product.removeProductDetail **/
		DELETE FROM product_detail
		WHERE detail_seq= #{productDetailSeq}
	</delete>	
</mapper>